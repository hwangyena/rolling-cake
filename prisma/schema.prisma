// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  email           String  @unique
  name            String?
  rollingCakeName String?

  accounts        Account[]
  cake            Cake[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Cake {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  userId          String @db.ObjectId
  cakeType        CakeType
  customCake      Json?
  themeCake       ThemeCake?

  user            User @relation(fields: [userId], references: [id], onDelete: Cascade)
  letter          Letter?
}

model Letter {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime @default(now())
  isPrivate       Boolean
  name            String
  content         String

  cakeId          String @db.ObjectId @unique
  cake            Cake @relation(fields: [cakeId], references: [id])
}

enum CakeType {
  CUSTOM
  THEME
}

enum ThemeCake {
  SOJU
  HARRYPOTER
  MONEY
  PRINCESS
  ANiMAL
  PLANT
}